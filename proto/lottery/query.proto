syntax = "proto3";
package tokenism30924.lottery.lottery;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "lottery/params.proto";
import "lottery/lottery.proto";

import "lottery/bet.proto";
import "lottery/bet_data.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/tokenism30924/lottery/x/lottery/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/tokenism30924/lottery/lottery/params";
  }
  // Queries a Lottery by index.
	rpc Lottery(QueryGetLotteryRequest) returns (QueryGetLotteryResponse) {
		option (google.api.http).get = "/tokenism30924/lottery/lottery/lottery/{index}";
	}

	// Queries a list of Lottery items.
	rpc LotteryAll(QueryAllLotteryRequest) returns (QueryAllLotteryResponse) {
		option (google.api.http).get = "/tokenism30924/lottery/lottery/lottery";
	}

// Queries a BetData by index.
	rpc BetData(QueryGetBetDataRequest) returns (QueryGetBetDataResponse) {
		option (google.api.http).get = "/tokenism30924/lottery/lottery/bet_data/{index}";
	}

	// Queries a list of BetData items.
	rpc BetDataAll(QueryAllBetDataRequest) returns (QueryAllBetDataResponse) {
		option (google.api.http).get = "/tokenism30924/lottery/lottery/bet_data";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetLotteryRequest {
	  string index = 1;

}

message QueryGetLotteryResponse {
	Lottery lottery = 1 [(gogoproto.nullable) = false];
}

message QueryAllLotteryRequest {
}

message QueryAllLotteryResponse {
	repeated Lottery lottery = 1 [(gogoproto.nullable) = false];
}

message QueryGetBetDataRequest {
	  string index = 1;

}

message QueryGetBetDataResponse {
	BetData betData = 1 [(gogoproto.nullable) = false];
}

message QueryAllBetDataRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBetDataResponse {
	repeated BetData betData = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
